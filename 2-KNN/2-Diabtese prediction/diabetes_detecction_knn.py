# -*- coding: utf-8 -*-
"""diabetes_detecction_knn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qraS1Vq7rSKXZPLH2F1tDyIx1I0Hge3F

importing header files
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""loading data-sets"""

df1 = pd.read_csv('Diabetes_XTrain.csv')
df2 = pd.read_csv('Diabetes_YTrain.csv')
df3 = pd.read_csv('Diabetes_Xtest.csv')
df4 = pd.read_csv('Diabetes_YTest.csv')

"""Extracting data"""

data1 = df1.values
data2 = df2.values
data3 = df3.values
data4 = df4.values
data2.reshape((-1,))
data4.reshape((-1,))

"""differentiating training and testing datasets"""

x_train = data1
y_train = data2
x_test = data3
y_test = data4

"""Normalization"""

from sklearn.preprocessing import StandardScaler as ss
sc = ss()
x_train = sc.fit_transform(x_train)
x_test = sc.fit_transform(x_test)

"""ecuilidean distance"""

def dist(x1,x2):
  return np.sqrt(sum(x1-x2)**2)

"""knn"""

def knn(x, y, query, k=5):
  val =[]
  m = x.shape[0]
  for i in range(m):
    d = dist(query, x[i])
    val.append((d,y[i]))
  val = sorted(val)
  val = val[:k+1]
  val = np.array(val)
  new_val = np.unique(val[:,1], return_counts=True)
  index = new_val[1].argmax()
  pred = new_val[0][index]
  return pred

"""prediction"""

val =[]
m = x_test.shape[0]
for i in range(m):
  val.append(knn(x_train, y_train, x_test[i]))
val = np.array(val)
print(val)
print(val.shape)
print(x_test.shape)

"""convertibg results in dataframe"""

val=pd.DataFrame(val)
val.rename(columns={"0":"Outcome"},inplace=True)

"""converting result into csv"""

val.to_csv("diabe.csv",index=False)

"""reading csv"""

pred=pd.read_csv("diabe.csv")
pred.head()
pred.shape